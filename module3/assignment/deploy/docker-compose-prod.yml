services:
  application:
    container_name: rrc-web-dev-assignment3
    image: leopoldhsing2/rrc-web-dev-assignment3
    networks:
      - rrc-default-network
    environment:
      - MYSQL_HOST
      - MYSQL_PORT
      - MYSQL_DATABASE_NAME
      - MYSQL_USER
      - MYSQL_PASSWORD
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:8.2.0
    container_name: rrc-assignment3-database
    volumes:
      - rrc-mysql-data:/var/lib/mysql
      - rrc-mysql-conf:/etc/mysql
      - ./docker-init:/docker-entrypoint-initdb.d
    networks:
      - rrc-default-network
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "America/Winnipeg"
    restart: on-failure
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 3s
      timeout: 10s
      start_period: 10s
      retries: 40

  nginx-proxy:
    image: nginx
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - rrc-web-dev-assignment3
    networks:
      - rrc-default-network


networks:
  rrc-default-network:
    driver: bridge
    name: rrc-default-network

volumes:
  rrc-mysql-data:
    name: rrc-mysql-data
  rrc-mysql-conf:
    name: rrc-mysql-conf
